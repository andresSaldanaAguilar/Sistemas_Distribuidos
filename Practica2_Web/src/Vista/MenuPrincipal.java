/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.AlumnoController;
import Controlador.CalificacionesController;
import Controlador.CarreraController;
import Controlador.CentrodetrabajoController;
import Controlador.ExamenController;
import Controlador.MateriasController;
import Controlador.PreguntasController;
import Controlador.RespuestasController;
import Interfaces.AlumnoInt;
import Interfaces.CalificacionesInt;
import Interfaces.CarreraInt;
import Interfaces.CentrodetrabajoInt;
import Modelo.Alumno;
import Modelo.Calificaciones;
import Modelo.Carrera;
import Modelo.Centrodetrabajo;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author sam-y
 */
public class MenuPrincipal extends javax.swing.JFrame {

    static String noCuenta, contra, noCliente;
    Formulario_Alumno_Alta form3_alta = new Formulario_Alumno_Alta();
    Formulario_Carrera_Alta form2_alta = new Formulario_Carrera_Alta();
    Formulario_Centrodetrabajo_Alta form1_alta = new Formulario_Centrodetrabajo_Alta();
    Formulario_Calificaciones_Alta form4_alta = new Formulario_Calificaciones_Alta();
    Consulta_Centrodetrabajo form_consultaCT = new Consulta_Centrodetrabajo();
    Consulta_Carrera form_consultaC = new Consulta_Carrera();
    Consulta_Alumno form_consultaAlumno = new Consulta_Alumno();
    Consulta_Calificaciones form_consultaCalificaciones = new Consulta_Calificaciones();

    public MenuPrincipal() {
//        try {
//            AlumnoController alumnoController = (AlumnoController)Naming.lookup("rmi://localhost/alumnoController");
//            CalificacionesController calificacionesController = (CalificacionesController)Naming.lookup("rmi://localhost/calificacionesController");
//            CarreraController carreraController = (CarreraController)Naming.lookup("rmi://localhost/carreraController");
//            CentrodetrabajoController centrodetrabajoController = (CentrodetrabajoController)Naming.lookup("rmi://localhost/centrodetrabajoController");
//            ExamenController examenController = (ExamenController)Naming.lookup("rmi://localhost/examenController");
//            MateriasController materiasController = (MateriasController)Naming.lookup("rmi://localhost/materiasController");
//            PreguntasController preguntasController = (PreguntasController)Naming.lookup("rmi://localhost/preguntasController");
//            RespuestasController respuestasController = (RespuestasController)Naming.lookup("rmi://localhost/respuestasController");
//            //busca un rmi, que se encuentra en el localhost y se llama operaciones, como le puse en el servidor
//            
//        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
//            Logger.getLogger(AlumnoController.class.getName()).log(Level.SEVERE, null, ex);
//        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        x = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout xLayout = new javax.swing.GroupLayout(x);
        x.setLayout(xLayout);
        xLayout.setHorizontalGroup(
            xLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        xLayout.setVerticalGroup(
            xLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        jMenu1.setText("Opciones");

        jMenu2.setText("Alta");

        jMenuItem6.setText("Centro de Trabajo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Carrera");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("Alumno");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setText("Calificaciones");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenu1.add(jMenu2);

        jMenu3.setText("Baja");

        jMenuItem10.setText("Centro de Trabajo");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem11.setText("Carrera");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuItem12.setText("Alumno");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);

        jMenuItem13.setText("Calificaciones");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenu1.add(jMenu3);

        jMenu4.setText("Cambio");

        jMenuItem1.setText("Centro de Trabajo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("Carrera");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem3.setText("Alumno");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Calificaciones");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenu1.add(jMenu4);

        jMenu5.setText("Consulta uno");

        jMenuItem14.setText("Centro de Trabajo");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem14);

        jMenuItem15.setText("Carrera");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem15);

        jMenuItem16.setText("Alumno");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem16);

        jMenuItem17.setText("Calificaciones");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem17);

        jMenu1.add(jMenu5);

        jMenu6.setText("Consulta todos ");

        jMenuItem18.setText("Centro de Trabajo");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem18);

        jMenuItem19.setText("Carrera");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem19);

        jMenuItem20.setText("Alumno");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem20);

        jMenuItem21.setText("Calificaciones");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem21);

        jMenu1.add(jMenu6);

        jMenuItem5.setText("Salir");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(x)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(x, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Id del Centro de Trabajo a Eliminar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CentrodetrabajoInt centrodetrabajoController = (CentrodetrabajoInt) Naming.lookup("rmi://localhost/centrodetrabajoController");
                Centrodetrabajo c = centrodetrabajoController.selectoneCentrodetrabajo(id);
                if (c != null) {
                    centrodetrabajoController.deleteCentrodetrabajo(id);
                    JOptionPane.showMessageDialog(null, "Centro de Trabajo Eliminado con exito");
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // Alta centro de trabajo
        this.x.add(form1_alta);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible()&& !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            form1_alta.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        this.x.add(form2_alta);
        if (!form1_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible()&& !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            form2_alta.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        this.x.add(form3_alta);
        if (!form1_alta.isVisible() && !form2_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible()&& !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            form3_alta.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        this.x.add(form4_alta);
        if (!form1_alta.isVisible() && !form2_alta.isVisible() && !form3_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            form4_alta.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.x.add(form1_alta);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                form1_alta.setVisible(true, 1);
            } catch (NotBoundException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.x.add(form2_alta);
        if (!form1_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                form2_alta.setVisible(true, 1);
            } catch (NotBoundException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.x.add(form3_alta);
        if (!form1_alta.isVisible() && !form2_alta.isVisible() && !form4_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                form3_alta.setVisible(true, 1);
            } catch (NotBoundException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        this.x.add(form4_alta);
        if (!form1_alta.isVisible() && !form2_alta.isVisible() && !form3_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                form4_alta.setVisible(true, 1);
            } catch (NotBoundException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Id de la Carrera a Eliminar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CarreraInt carreraController = (CarreraInt) Naming.lookup("rmi://localhost/carreraController");
                Carrera c = carreraController.selectoneCarrera(id);
                if (c != null) {
                    carreraController.deleteCarrera(id);
                    JOptionPane.showMessageDialog(null, "Carrera Eliminada con exito");
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Matricula del Alumno a Eliminar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                long id = Long.valueOf(stringInput);
                AlumnoInt alumnoController = (AlumnoInt) Naming.lookup("rmi://localhost/alumnoController");
                Alumno c = alumnoController.selectoneAlumno(id);
                if (c != null) {
                    alumnoController.deleteAlumno(id);
                    JOptionPane.showMessageDialog(null, "Alumno Eliminado con exito");
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        String stringInput = JOptionPane.showInputDialog("id de Calificacion a Eliminar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CalificacionesInt calificacionesController = (CalificacionesInt) Naming.lookup("rmi://localhost/calificacionesController");
                Calificaciones c = calificacionesController.selectoneCalificaciones(id);
                if (c != null) {
                    calificacionesController.deleteCalificaciones(id);
                    JOptionPane.showMessageDialog(null, "Calificacion Eliminada con exito");
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Id del Centro de Trabajo a Buscar");
        if (stringInput != null && stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CentrodetrabajoInt centrodetrabajoController = (CentrodetrabajoInt) Naming.lookup("rmi://localhost/centrodetrabajoController");
                Centrodetrabajo c = centrodetrabajoController.selectoneCentrodetrabajo(id);
                if (c != null) {
                    form_consultaCT = new Consulta_Centrodetrabajo();
                    this.x.add(form_consultaCT);
                    if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaC.isVisible()&& !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
                        form_consultaCT.setVisible(c);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        form_consultaCT = new Consulta_Centrodetrabajo();
        this.x.add(form_consultaCT);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaC.isVisible()&& !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                CentrodetrabajoInt centrodetrabajoController = (CentrodetrabajoInt) Naming.lookup("rmi://localhost/centrodetrabajoController");
                DefaultListModel dl;
                dl = centrodetrabajoController.selectallCentrodetrabajo();
                form_consultaCT.setVisible(true,dl);
            } catch (RemoteException | NotBoundException | MalformedURLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Id de la Carrera a Buscar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CarreraInt carreraController = (CarreraInt) Naming.lookup("rmi://localhost/carreraController");
                Carrera c = carreraController.selectoneCarrera(id);
                if (c != null) {
                    form_consultaC = new Consulta_Carrera();
                    this.x.add(form_consultaC);
                    if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible()&& !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
                        form_consultaC.setVisible(c);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        form_consultaC = new Consulta_Carrera();
        this.x.add(form_consultaC);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaAlumno.isVisible()&& !form_consultaCalificaciones.isVisible()) {
            try {
                CarreraInt carreraController = (CarreraInt) Naming.lookup("rmi://localhost/carreraController");
                DefaultListModel dl;
                dl = carreraController.selectallCarrera();
                form_consultaC.setVisible(true,dl);
            } catch (RemoteException | NotBoundException | MalformedURLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        String stringInput = JOptionPane.showInputDialog("Matricula del Alumno a Buscar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                long id = Long.valueOf(stringInput);
                AlumnoInt alumnoController = (AlumnoInt) Naming.lookup("rmi://localhost/alumnoController");
                Alumno c = alumnoController.selectoneAlumno(id);
                if (c != null) {
                    form_consultaAlumno = new Consulta_Alumno();
                    this.x.add(form_consultaAlumno);
                    if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible()&& !form_consultaCalificaciones.isVisible()) {
                        form_consultaAlumno.setVisible(c);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        form_consultaAlumno = new Consulta_Alumno();
        this.x.add(form_consultaAlumno);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaCalificaciones.isVisible()) {
            try {
                AlumnoInt alumnoController = (AlumnoInt) Naming.lookup("rmi://localhost/alumnoController");
                DefaultListModel dl;
                dl = alumnoController.selectallAlumno();
                form_consultaAlumno.setVisible(true,dl);
            } catch (RemoteException | NotBoundException | MalformedURLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        String stringInput = JOptionPane.showInputDialog("id de Calificacion a Buscar");
        if (stringInput != null&& stringInput.matches("^\\d+$")) {
            try {
                int id = Integer.valueOf(stringInput);
                CalificacionesInt calificacionesController = (CalificacionesInt) Naming.lookup("rmi://localhost/calificacionesController");
                Calificaciones c = calificacionesController.selectoneCalificaciones(id);
                if (c != null) {
                    form_consultaCalificaciones = new Consulta_Calificaciones();
                    this.x.add(form_consultaCalificaciones);
                    if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()) {
                        form_consultaCalificaciones.setVisible(c);
                    }} else {
                    JOptionPane.showMessageDialog(null, "Id inválido");
                }
            } catch (NotBoundException | MalformedURLException | RemoteException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Id inválido");
        }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        form_consultaCalificaciones = new Consulta_Calificaciones();
        this.x.add(form_consultaCalificaciones);
        if (!form2_alta.isVisible() && !form3_alta.isVisible() && !form4_alta.isVisible() && !form1_alta.isVisible() && !form_consultaCT.isVisible() && !form_consultaC.isVisible() && !form_consultaAlumno.isVisible()) {
            try {
                CalificacionesInt calificacionesController = (CalificacionesInt) Naming.lookup("rmi://localhost/calificacionesController");
                DefaultListModel dl;
                dl = calificacionesController.selectallCalificaciones();
                form_consultaCalificaciones.setVisible(true,dl);
            } catch (RemoteException | NotBoundException | MalformedURLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JDesktopPane x;
    // End of variables declaration//GEN-END:variables
}
